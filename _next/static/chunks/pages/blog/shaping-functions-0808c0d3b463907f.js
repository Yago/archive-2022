(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7287],{46089:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/shaping-functions",function(){return t(49767)}])},49767:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return l},meta:function(){return o}});var s=t(85893),r=t(11151),i=t(47439);let o={path:"/blog/shaping-functions",title:"Shaping functions !",date:"2018-11-28T00:00:00.000Z",type:"post",description:"We live in the era of JavaScript Functional Programming, but I still asked myself sometimes if my way of declaring function is the “good” one.  It’s one of those early basic things that we learn first and that we are using all the time, but without really knowing why and how it is so."},a=n=>{let{children:e}=n;return(0,s.jsx)(i.Z,{meta:o,children:e})};function c(n){let e={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["We live in the era of JavaScript Functional Programming, but I still asked myself sometimes if my way of declaring function is the “good” one.  ",(0,s.jsx)(e.strong,{children:"It’s one of those early basic things that we learn first and that we are using all the time"}),", but without really knowing why and how it is so."]}),"\n",(0,s.jsx)(e.p,{children:"Since ES2015, I’m a big fan of minimal arrow functions like:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const addition = (i, j) => i + j;\n"})}),"\n",(0,s.jsxs)(e.p,{children:["Still, it’s time for checking the basics and current status of functions creation ! ",(0,s.jsx)(e.em,{children:"(And also if I’m not totally wrong about the default practice above)"})]}),"\n",(0,s.jsx)(e.h2,{children:"Your options"}),"\n",(0,s.jsxs)(e.p,{children:["I found a very interesting and only 10-year-old ",(0,s.jsx)(e.a,{href:"https://stackoverflow.com/questions/336859/var-functionname-function-vs-function-functionname",children:"Stack Overflow question"}),"  about this subject and the following explanations are inspired by it. So in JavaScript, ",(0,s.jsx)(e.strong,{children:"there is more than 7 ways of creating functions"})," and I will present (almost) all of them."]}),"\n",(0,s.jsx)(e.h3,{children:"Brief"}),"\n",(0,s.jsxs)(e.p,{children:["For each of the following examples, we are going to ",(0,s.jsx)(e.strong,{children:"create a pure function which will return the sum of all the arguments of type number"})," that we pass in."]}),"\n",(0,s.jsx)(e.h3,{children:"Function Declaration"}),"\n",(0,s.jsx)(e.p,{children:"Maybe the one that everybody learns first and very close to a lot of other programming languages:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"function sum() {\n  return [...arguments].reduce(function (acc, n) {\n    if (typeof n === 'number') return acc + n;\n    return acc;\n  }, 0);\n}\n"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:["“A function declaration is processed when execution enters the context in which it appears, ",(0,s.jsx)(e.strong,{children:"before"})," any step-by-step code is executed.”"]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["This is a very important point, because unless almost all of the following variants, here you can basically call a function ",(0,s.jsx)(e.strong,{children:"above"})," it’s declaration. Not the best practice from my point of view, but still."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"sum(31,7,4); // return 42\n\nfunction sum() {\n  return [...arguments].reduce(function (acc, n) {\n    if (typeof n === 'number') return acc + n;\n    return acc;\n  }, 0);\n}\n"})}),"\n",(0,s.jsx)(e.p,{children:"Like almost anything in ES2015+, it’s block scoped. So it’s only available on its context (another function, condition statement, etc)."}),"\n",(0,s.jsx)(e.h3,{children:"Anonymous Function Expression"}),"\n",(0,s.jsxs)(e.p,{children:["Very close to the “new” arrow function (see below), it consists of ",(0,s.jsx)(e.strong,{children:"assigning an anonymous method to a variable"}),". It’s evaluated when it’s reached in the step-by-step execution of the code, so don’t try to call it before as the previous example; it will return an ",(0,s.jsx)(e.code,{children:"undefined function"})," error."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const sum = function () {\n  return [...arguments].reduce(function (acc, n) {\n    if (typeof n === 'number') return acc + n;\n    return acc;\n  }, 0);\n}\n\nsum(31,7,4); // return 42\n"})}),"\n",(0,s.jsx)(e.p,{children:"— OK, but it will be hard to track errors because of the anonymous nature of your function, bla bla bla\n— Wrong !"}),"\n",(0,s.jsxs)(e.p,{children:["It has been the case in the old times, but since ES2015+ ",(0,s.jsx)(e.code,{children:"sum.name"})," will return you ",(0,s.jsx)(e.code,{children:"sum"})," and ",(0,s.jsx)(e.strong,{children:"not an empty string"})," like it was before. So there is less downsides of using classy Anonymous  Function Expression."]}),"\n",(0,s.jsx)(e.h3,{children:"Named Function Expression"}),"\n",(0,s.jsxs)(e.p,{children:["It’s a combination the Function Declaration and Anonymous Function Expression. Named Function Expression or NFEs ",(0,s.jsx)(e.strong,{children:"solve the anonymous “issues”"})," back in the days, but has also the benefits of ",(0,s.jsx)(e.strong,{children:"providing a shorter method name in it context"}),", very useful for recursions."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const sum = function sum() {\n  return [...arguments].reduce(function (acc, n) {\n    if (typeof n === 'number') return acc + n;\n    return acc;\n  }, 0);\n}\n\nsum(31,7,4); // return 42\n\n// For recursion\nperson.communication.capabilities.greetings = greetings() {\n  console.log('Hello you ! ❤️');\n  greetings(); // Infinite greetings, yay !\n};\n"})}),"\n",(0,s.jsx)(e.h3,{children:"Arrow Function (ES2015+)"}),"\n",(0,s.jsx)(e.p,{children:"[SPOILER ALERT] My favorite:D"}),"\n",(0,s.jsxs)(e.p,{children:["Simple, sober, clean, beautiful and so much more, this form of function creation is almost like the Anonymous Function Expression, ",(0,s.jsx)(e.strong,{children:"but without its own context"}),". It means that ",(0,s.jsx)(e.code,{children:"this"})," will refer to it parent context."]}),"\n",(0,s.jsx)(e.p,{children:"Basic rule:\n— Want a context (jQuery stuff) -> Anonymous Function Expression\n— Don’t care -> Arrow Function"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const sum = (...args) => {\n  return args.reduce((acc, n) => typeof n === 'number' ? acc + n: acc, 0);\n}\n\nsum(31,7,4); // return 42\n"})}),"\n",(0,s.jsx)(e.h3,{children:"Accessor Function Initializer (getter, setter)"}),"\n",(0,s.jsxs)(e.p,{children:["Not frequently used, it is still very useful ",(0,s.jsx)(e.strong,{children:"when you want to easily access an object’s attribute"})," and do something with it."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const sum = {\n  current: 0,\n  get result() {\n    return `The current result is ${this.current}`;\n  },\n  set add(n) {\n    if (typeof n === 'number') this.current = this.current + n;\n  }\n};\n\nsum.add = 31;\nsum.add = 7;\nsum.add = 4;\nconsole.log(sum.result); // The current result is 42\n"})}),"\n",(0,s.jsx)(e.h3,{children:"Method Declaration in Object Initializer (ES2015+)"}),"\n",(0,s.jsxs)(e.p,{children:["A basic ",(0,s.jsx)(e.strong,{children:"object’s function attribute"})," with its shorter ES2015+ form."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const calculator = {  \n  sum(...args) {\n    return args.reduce((acc, n) => typeof n === 'number' ? acc + n: acc, 0);\n  },\n  \n  sumOldSchool: function () {\n    return [...arguments].reduce(function (acc, n) {\n      if (typeof n === 'number') return acc + n;\n      return acc;\n    }, 0);\n  },  \n};\n\ncalculator.sum(31, 7, 4);          // return 42\ncalculator.sumOldSchool(31, 7, 4); // return 42\n"})}),"\n",(0,s.jsx)(e.h3,{children:"Constructor and Method Declarations in class (ES2015+)"}),"\n",(0,s.jsxs)(e.p,{children:["With the popularity of ",(0,s.jsx)(e.a,{href:"https://reactjs.org/",children:"React"})," and the usage of ",(0,s.jsx)(e.strong,{children:"Class"}),", this form of function creation had become really popular."]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"class Calculator {\n  constructor(origin) {\n    this.origin = origin;\n  }\n  \n  sum(...args) {\n    return args.reduce((acc, n) => typeof n === 'number' ? acc + n: acc, this.origin);\n  }\n}\n\nconst Hal = new Calculator(0);\nHal.sum(31, 7, 4); // return 42\n"})}),"\n",(0,s.jsx)(e.h2,{children:"Conclusion"}),"\n",(0,s.jsxs)(e.p,{children:["We saw almost all the forms of function creation (sure it exists others) and we can all agreed that there is not one better than another, because ",(0,s.jsx)(e.strong,{children:"it depends on the context and the purpose"}),"."]}),"\n",(0,s.jsxs)(e.p,{children:["The way of ",(0,s.jsx)(e.strong,{children:"using by default the Anonymous Arrow Function"})," for standard creation is also not that bad. ",(0,s.jsx)(e.strong,{children:"The downside of anonymity of having difficulties to trace back an error is not more an issue from ES2015+"}),". Personally, I found this “new” form of function creation very elegant, minimalist and self-rewarding to use."]}),"\n",(0,s.jsx)(e.p,{children:"In a Functional world without any real downsides of preferring a form more than another, pick the nice one XD"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const delay = (time) => new Promise(resolve => setTimeout(resolve, time));\n\nconst thanks = async () => {\n  console.log('\uD83D\uDC4A');  \n  await delay(500);\n  console.log('\uD83D\uDD90️');\n  await delay(500);\n  console.log('\uD83C\uDFA4');\n};\n\nthanks(); // \uD83D\uDE18\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"Supported with"})," \uD83D\uDC9B ",(0,s.jsxs)(e.em,{children:["by ",(0,s.jsx)(e.a,{href:"https://antistatique.net",children:"Antistatique"})]})]})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(a,{...n,children:(0,s.jsx)(c,{...n})})}},62090:function(n,e,t){"use strict";t.d(e,{Z:function(){return l}});var s=t(85893);t(67294);var r=t(90512),i=t(41664),o=t.n(i),a=t(68658),c=t(81612),l=n=>{let{crumbs:e}=n;return(0,s.jsx)("nav",{"aria-label":"breadcrumb",className:"mb-6 transform md:translate-x-1 md:mb-0",children:(0,s.jsxs)("ol",{className:"inline-flex text-sm text-gray-600 lowercase md:text-lg opacity-60 hover:opacity-100 duration-500 transition-opacity transform md:-translate-x-full md:translate-y-2 md:-rotate-90 md:origin-right",children:[(0,s.jsx)("li",{children:(0,s.jsxs)(o(),{href:"/",className:"link",children:[(0,s.jsx)("span",{className:"sr-only",children:"Homepage"}),(0,s.jsx)(c.Z,{name:"tipi",className:"text-base md:text-lg"})]})}),e.map((n,e)=>{let{href:t,label:i}=n;return(0,a.Z)(t)?(0,s.jsxs)("li",{"aria-current":"page",children:[(0,s.jsx)("span",{className:"px-3","aria-hidden":!0,children:"\xb7"}),(0,s.jsx)("span",{className:(0,r.Z)("inline-block truncate",{maxWidth:250}),children:i})]},"crumb-".concat(e)):(0,s.jsxs)("li",{children:[(0,s.jsx)("span",{className:"px-3","aria-hidden":!0,children:"\xb7"}),(0,s.jsx)(o(),{href:t,className:"link",children:i})]},"crumb-".concat(e))})]})})}},47439:function(n,e,t){"use strict";t.d(e,{Z:function(){return d}});var s=t(85893);t(67294);var r=t(47906),i=t(63595),o=t(62090),a=t(73574),c=t(29454),l=t(53659),u=t(8523),h=t(35045),d=n=>{let{children:e,meta:t}=n;return(0,s.jsxs)(l.Z,{outsideChildren:(0,s.jsx)(u.Z,{}),children:[(0,s.jsx)(h.Z,{title:t.title,description:t.description}),(0,s.jsx)(o.Z,{crumbs:[{href:"/blog",label:"Blog"},{label:t.title}]}),(0,s.jsxs)("article",{className:"w-full mx-auto mt-20 sm:w-10/12 md:w-2/3 xl:w-7/12 md:px-8",children:[(0,s.jsxs)(c.Z,{move:!1,children:[(0,s.jsx)("h1",{className:"text-3xl font-medium text-gray-900 md:text-4xl lg:text-5xl",children:t.title}),(0,s.jsx)(a.Z,{children:(0,s.jsxs)("h2",{className:"font-medium md:text-lg",children:[(0,s.jsx)("span",{children:"Yann Gouffon — "}),(0,r.WU)((0,i.D)(t.date),"PPP")]})})]}),(0,s.jsx)(c.Z,{className:"mt-16 font-serif text-lg text-gray-900 space-y-6 md:mt-14 prose-headings:pt-4 prose-p:leading-[1.618em] lg:text-xl xl:text-2xl xl:prose-p:leading-[1.618em] prose-a:text-blue prose-headings:font-sans prose-headings:font-medium prose-h2:text-[26px] xl:prose-h2:text-[28px] prose-h3:text-[19px] lg:prose-h3:text-[24px] xl:prose-h3:text-[27px] prose-h4:text-[18px] lg:prose-h4:text-[21px] xl:prose-h4:text-[25px] prose-strong:text-medium prose-ul:list-disc prose-ul:pl-3 prose-ul:space-y-3 prose-ul:leading-[1.618em] xl:prose-figure:w-[106%] xl:prose-figure:-translate-x-[2.8%] prose-figure:rounded-lg prose-figure:overflow-hidden prose-figure:my-8",children:e})]})]})}}},function(n){n.O(0,[1635,9757,3880,520,5098,7539,8523,2888,9774,179],function(){return n(n.s=46089)}),_N_E=n.O()}]);